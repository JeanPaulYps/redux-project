{"version":3,"sources":["reducers/usersSlice.js","Components/Spinner.js","Components/UsersTable.js","Components/Error.js","Components/Users.js","reducers/usersActions.js","reducers/publicationsSlice.js","reducers/commentsSlice.js","Components/Comments.js","Components/Publications.js","reducers/tasksSlice.js","Components/ShowTask.js","Components/Tasks.js","Components/App.js","index.js"],"names":["usersActions","createSlice","name","initialState","cargando","usuarios","error","reducers","downloadedUsers","state","action","payload","loadingError","ready","Spinner","class","UsersTable","map","usuario","email","website","to","id","src","process","alt","width","Error","message","Users","useSelector","users","dispatch","useDispatch","useEffect","setTimeout","actions","fetch","then","response","ok","console","log","json","data","catch","className","getUserPublications","createAsyncThunk","userId","a","rejectWithValue","userPublications","publicationsSlice","downloadedUserPublications","intializeLoading","loading","extraReducers","fulfilled","pending","rejected","getComments","publicationId","publicationComments","commentsSlice","Comments","setCommentsVisibility","comments","loadingComments","errorCommentsLoading","onClick","comment","ClassName","body","Publications","props","useParams","publications","useState","commentsAreVisible","setPublicationId","publication","divPublicationId","title","URL","loadTasks","_","taskByUserId","tasks","taskJSON","tasksSlice","intializeState","tasksByUserId","ShowTask","task","completed","key","type","checked","Tasks","taskLoading","Object","keys","item","App","exact","path","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71e27157.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst intialState = {\r\n  cargando: true,\r\n  usuarios:  [],\r\n  error: ''\r\n} ;\r\n\r\n\r\nconst usersActions = createSlice({\r\n  name: 'users',\r\n  initialState: intialState,\r\n  reducers: {\r\n    downloadedUsers (state, action) {\r\n      state.cargando = false; \r\n      state.usuarios = action.payload;\r\n    },\r\n    loadingError (state, action) {\r\n      state.cargando = false; \r\n      state.error = action.payload;\r\n    },\r\n    ready (state){\r\n      state.cargando = false;\r\n    },\r\n  },\r\n})\r\n\r\n\r\nexport { usersActions, }","import '../Styles/Spinner.css'\r\n\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <div class=\"lds-roller\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Spinner, } ","import { Link } from 'react-router-dom';\r\n\r\n\r\nfunction UsersTable({ usuarios }){\r\n    return( \r\n        <table>\r\n            <thead>\r\n                <th> Nombre </th>\r\n                <th> Email </th>\r\n                <th> Website </th>\r\n            </thead>\r\n            {\r\n            usuarios.map( (usuario) => \r\n                {\r\n                    return(\r\n                        <tr>\r\n                            <td> {usuario.name} </td>\r\n                            <td> {usuario.email} </td>  \r\n                            <td> {usuario.website} </td>\r\n                            <td>\r\n                                <Link to= {`/userPublications/${usuario.id}`}>\r\n                                    <img src={process.env.PUBLIC_URL + '/blog.svg'} alt=\"\" width=\"20px\"  />\r\n                                </Link>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                }\r\n            )\r\n            }\r\n        </table>\r\n    );\r\n}\r\n\r\nexport { UsersTable, };","import React from 'react'\r\n\r\nfunction Error({ message }) {\r\n    return (\r\n        <div>\r\n            <h2>Error</h2>\r\n            <p> { message } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Error, }","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { usersActions } from \"../reducers/usersSlice.js\";\r\nimport { Spinner } from \"./Spinner.js\";\r\nimport { fetchUsersData } from \"../reducers/usersActions.js\";\r\nimport { UsersTable } from \"./UsersTable.js\";\r\nimport { Error } from './Error';\r\n\r\n\r\n\r\nfunction Users() {\r\n    const usuarios = useSelector( state => state.users.usuarios);\r\n    const cargando = useSelector( state => state.users.cargando);\r\n    const error = useSelector( state => state.users.error);\r\n    const dispatch = useDispatch();\r\n\r\n     \r\n    \r\n    useEffect( () => \r\n    {\r\n        setTimeout(()=>{\r\n            dispatch(usersActions.actions.ready());\r\n        }, 2000); \r\n\r\n        dispatch(fetchUsersData());\r\n        \r\n    }, [dispatch])\r\n    \r\n    \r\n\r\n\r\n     \r\n    return( \r\n        <div className=\"UserTable\">\r\n            { cargando && <Spinner/> } \r\n\r\n            { error && <Error message={error}/> }\r\n\r\n            { !cargando && !error && <UsersTable usuarios = {usuarios} /> }\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport { Users, };","import { usersActions } from './usersSlice'\r\n\r\nconst fetchUsersData = () => \r\n{\r\n    return (dispatch) => {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then((response) => {\r\n            if (!response.ok)\r\n            {\r\n                throw new Error('We have problems loading the data. Please try later')\r\n            }\r\n            console.log(\"Datos cargados\");\r\n            response.json().then( data=> {\r\n                console.log(data);\r\n                dispatch(usersActions.actions.downloadedUsers(data));\r\n            });\r\n        }).catch((error)=>{\r\n            console.log(error.message);\r\n            dispatch(usersActions.actions.loadingError('We have problems loading the data. Please try later'));\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport { fetchUsersData, }","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst URL = \"https://jsonplaceholder.typicode.com\"\r\n\r\nconst initialState = {\r\n    'userPublications' : [],\r\n    'loading': true,\r\n    'error': ''\r\n}\r\n\r\nconst getUserPublications = createAsyncThunk(\r\n    'publications/getUserPublications', \r\n    async (userId, { rejectWithValue }) => {\r\n        try {\r\n            let userPublications = await fetch(`${URL}/posts?userId=${userId}`).then(response => {\r\n                if(!response.ok){\r\n                    throw new Error('Direccion no disponible');\r\n                }\r\n                return response.json();\r\n                }\r\n            );\r\n            \r\n            return userPublications;\r\n        }\r\n        catch (err) { \r\n            console.log(err);\r\n            return rejectWithValue('We have problems loading the data. Please try later')\r\n        }\r\n    }\r\n)\r\n\r\n\r\n\r\nconst publicationsSlice = createSlice({\r\n    name: 'Publications',\r\n    initialState,\r\n    reducers: {\r\n        downloadedUserPublications (state, action){\r\n            state.userPublications = action.payload;\r\n        },\r\n        intializeLoading (state){\r\n            state.userPublications = [];\r\n            state.loading = true;\r\n            state.error = '';   \r\n        }\r\n    },\r\n    extraReducers: {\r\n        [getUserPublications.fulfilled]: (state, { payload }) => {\r\n            state.userPublications = payload;\r\n            state.loading = false; \r\n        },\r\n        [getUserPublications.pending]: (state) => {\r\n            state.loading = true;\r\n            state.error = '';\r\n        },\r\n        [getUserPublications.rejected]: (state, action) => {\r\n            console.log(action);\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        }\r\n    }\r\n})\r\n\r\nexport { publicationsSlice, getUserPublications, };","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst URL = \"https://jsonplaceholder.typicode.com\";\r\n\r\nconst initialState = {\r\n    'publicationComments' : [],\r\n    'loading': true,\r\n    'error': ''\r\n}\r\n\r\nconst getComments = createAsyncThunk(\r\n    'comments/getComments', \r\n    async (publicationId, { rejectWithValue })=> {\r\n        try {\r\n            let publicationComments = await fetch(`${URL}/comments?postId=${publicationId}`).then(response => {\r\n                if(!response.ok){\r\n                    throw new Error('Direccion no disponible');\r\n                }\r\n                return response.json();\r\n                }\r\n            );\r\n            \r\n            return publicationComments;\r\n        } catch(err){\r\n            console.log(err);\r\n            return rejectWithValue('We have problems loading the data. Please try later')\r\n        }\r\n    }\r\n)\r\n\r\nconst commentsSlice = createSlice({\r\n    name: 'comments',\r\n    initialState,\r\n    reducers: {\r\n        intializeLoading (state){\r\n            state.publicationComments = [];\r\n            state.loading = true;\r\n            state.error = '';   \r\n        }\r\n    },\r\n    extraReducers: {\r\n        [getComments.fulfilled]: (state, { payload }) => {\r\n            state.publicationComments = payload;\r\n            state.loading = false; \r\n        },\r\n        [getComments.pending]: (state) => {\r\n            state.loading = true;\r\n            state.error = '';\r\n        },\r\n        [getComments.rejected]: (state) => {\r\n            state.error = 'Error los datos no estan disponibles';\r\n            state.loading = false;\r\n        }\r\n    }\r\n})\r\n\r\nexport { commentsSlice, getComments }","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../Styles/Comments.css';\r\nimport { getComments } from '../reducers/commentsSlice';\r\nimport { Spinner } from './Spinner';\r\nimport { Error } from './Error';\r\n\r\n\r\nconst Comments = ({ setCommentsVisibility, publicationId }) => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getComments(publicationId));\r\n    }, [dispatch, publicationId])\r\n\r\n    const publicationComments = useSelector(state => state.comments.publicationComments);\r\n    const loadingComments = useSelector(state => state.comments.loading);\r\n    const errorCommentsLoading = useSelector(state => state.comments.error);\r\n\r\n    return (\r\n        <div className=\"Comments__Modal\">\r\n            <div className=\"Comments__Card\">\r\n                <img className=\"Comments__CloseButton\" src=\"/closeButton.svg\" alt=\"\" onClick={() => setCommentsVisibility(false) }/>\r\n                <div className=\"Comments__Container\">\r\n                { loadingComments && <Spinner/>}                \r\n                { !loadingComments && \r\n                    publicationComments.map(comment => {\r\n                        return(\r\n                            <div className=\"Comment\">\r\n                                <p className=\"Comment__UserName\"> { comment.email} </p>\r\n                                <p ClassName=\"Comment__Comment\"> \r\n                                    { comment.body }\r\n                                </p>\r\n                                <hr/>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                { errorCommentsLoading && <Error message={ errorCommentsLoading }/> }\r\n                </div>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Comments, }\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { getUserPublications, publicationsSlice } from '../reducers/publicationsSlice';\r\nimport { Spinner } from './Spinner';\r\nimport { Comments } from './Comments';\r\nimport { useState } from \"react\";\r\nimport { Error } from './Error';\r\n\r\n\r\nfunction Publications (props) \r\n{\r\n    const dispatch = useDispatch();\r\n    const { userId } = useParams();\r\n    const userPublications = useSelector(state => state.publications.userPublications);\r\n    const loading = useSelector(state => state.publications.loading);\r\n    const error = useSelector(state => state.publications.error);\r\n\r\n    const [commentsAreVisible, setCommentsVisibility] = useState(false);\r\n    const [publicationId, setPublicationId] = useState(0);\r\n    \r\n\r\n    useEffect(()=>{\r\n        dispatch(publicationsSlice.actions.intializeLoading()) ;\r\n        setTimeout( ()=> dispatch(getUserPublications(userId)), 1000) ;\r\n    },[dispatch, userId]);\r\n\r\n    const openComments = divPublicationId => () => {\r\n        setPublicationId(divPublicationId);\r\n        setCommentsVisibility(true)\r\n    }\r\n    \r\n    \r\n    return(\r\n        <>\r\n        <h1> Publications </h1>\r\n            <div>\r\n            {loading && <Spinner/>}\r\n\r\n            {\r\n                !loading && userPublications.map( publication => {\r\n                        return( \r\n                            <div key= {publication.id} onClick={openComments(publication.id)}>\r\n                                <h2> {publication.title} </h2>\r\n                                <p> {publication.body} </p>\r\n                                <hr/>\r\n                            </div>\r\n                        )\r\n                    }\r\n                )\r\n            }\r\n\r\n            { error && <Error message = { error }/> }\r\n\r\n            {\r\n                commentsAreVisible && \r\n                <Comments setCommentsVisibility={setCommentsVisibility} \r\n                            publicationId = {publicationId} />\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { Publications, }","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst URL = \"https://jsonplaceholder.typicode.com\";\r\n\r\nconst initialState = {\r\n    'tasksByUserId' : {},\r\n    'loading': true,\r\n    'error': ''\r\n};\r\n\r\nconst loadTasks = createAsyncThunk(\r\n    'tasks/getTasks',\r\n    async (_, { rejectWithValue }) => {\r\n        try{\r\n            let users = await fetch(`${URL}/users`).then(response => {\r\n                if (!response.ok){\r\n                    throw new Error ('Recurso no disponible')\r\n                }\r\n                return response.json();\r\n            })\r\n\r\n            const taskByUserId = {};\r\n            for (let {id, name} of users){\r\n                taskByUserId[id] = {'name': name, 'tasks': []};\r\n            }\r\n\r\n            let tasks = await fetch(`${URL}/todos`).then(response => {\r\n                if(!response.ok) {\r\n                    throw new Error ('Recurso no disponible');\r\n                }\r\n                return response.json();\r\n            });\r\n\r\n            for (let {userId, ...taskJSON} of tasks){\r\n                taskByUserId[userId].tasks = [...taskByUserId[userId].tasks, taskJSON];            \r\n            }\r\n            \r\n\r\n            return(taskByUserId);\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            rejectWithValue('We have problems loading the data. Please try later');\r\n        }\r\n    }\r\n)\r\n\r\nconst tasksSlice = createSlice({\r\n    name: 'tasks',\r\n    initialState, \r\n    reducers: {\r\n        intializeState (state) {\r\n            state.tasksByUserId = {};\r\n            state.loading = false;\r\n            state.error = '';\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [loadTasks.fulfilled] (state, {payload}) {\r\n            state.tasksByUserId = payload;\r\n            state.loading = false;\r\n        },\r\n        [loadTasks.pending] (state) {\r\n            state.loading = true;\r\n            state.error = '';\r\n            state.taskByUserId = {};\r\n        },\r\n        [loadTasks.rejected] (state, {payload}){ \r\n            state.loading = false;\r\n            state.error = payload;\r\n        }\r\n    },\r\n})\r\n\r\nexport { tasksSlice, loadTasks}","import React from 'react'\r\n\r\nfunction ShowTask({task: {title, completed}, key}) {\r\n    return (\r\n        <div key={key}>\r\n            <input type=\"checkbox\" checked={completed} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { ShowTask, }","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadTasks } from '../reducers/tasksSlice';\r\nimport { Spinner } from './Spinner';\r\nimport { ShowTask } from './ShowTask';\r\n\r\nfunction Tasks() {\r\n    const dispatch = useDispatch();\r\n    const tasksByUserId = useSelector(state => state.tasks.tasksByUserId);\r\n    const taskLoading = useSelector(state => state.tasks.loading);\r\n\r\n    useEffect(()=> {\r\n        dispatch( loadTasks() );\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <h1> Tareas </h1>\r\n            {taskLoading && <Spinner/>}\r\n            {!taskLoading && Object.keys(tasksByUserId).map((item) => {\r\n                    return(\r\n                        <div>\r\n                            <h1> {tasksByUserId[item].name }</h1>\r\n                            <div>\r\n                                {tasksByUserId[item].tasks.map( task => {\r\n                                    return(<ShowTask task = {task} key={item} /> );\r\n                                }\r\n                                )} \r\n                            </div>\r\n                            <hr/>\r\n                        </div>\r\n                    );\r\n                }\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Tasks, }","import { BrowserRouter, Link, Switch, Route } from 'react-router-dom';\nimport { Users }  from './Users';\nimport '../Styles/App.css'\nimport { Publications } from './Publications';\nimport { Tasks } from './Tasks';\n\nfunction App() {\n  return (\n      <BrowserRouter >\n      <header className=\"Header\">\n          <ul>\n              <li className=\"Header__Item\">\n                  <Link to='/' className=\"Header__Link\" >Users </Link>\n              </li>\n              <li className=\"Header__Item\">\n                  <Link to='/tasks' className=\"Header__Link\" >Tasks </Link>\n              </li>\n          </ul>\n      </header>\n      <Switch>\n          <Route exact path=\"/\">\n              <Users/>\n          </Route>\n          <Route path=\"/userPublications/:userId\">\n            <Publications/>\n          </Route>\n          <Route path=\"/tasks\">\n              <Tasks/>\n          </Route>\n      </Switch>\n      </BrowserRouter>\n  );\n}\n\n\nexport { App, };\n","import { configureStore } from '@reduxjs/toolkit';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App }  from './Components/App';\nimport  { usersActions } from './reducers/usersSlice';\nimport { publicationsSlice } from './reducers/publicationsSlice';\nimport { commentsSlice } from './reducers/commentsSlice';\nimport { tasksSlice } from './reducers/tasksSlice';\n\n\n\nconst store = configureStore({\n  reducer: { \n    users: usersActions.reducer,\n    publications: publicationsSlice.reducer,\n    comments: commentsSlice.reducer,\n    tasks: tasksSlice.reducer\n    \n  } \n});\n\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}